thm +
ylim(0,1) +
guides(linetype = guide_legend(order = 1), color = guide_legend(order = 2))
beta = coef(mod)
diff = c(0,0, # fungal
1,0, # male
0 # fungal*male
)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
mod = coxph(Surv(Start,Day,Death) ~ Fungal:gt1 + Fungal:gt2 + Male:gt1 + Male:gt2, data = df2)
cox.zph(mod)
cox.zph(mod, transform=log)
extractAIC(mod)
cox.zph(mod)
cox.zph(mod, transform=log)
mod = coxph(Surv(Start,Day,Death) ~ Fungal + Male:gt1 + Male:gt2, data = df2)
cox.zph(mod)
cox.zph(mod, transform=log)
extractAIC(mod)
diff = c(0, # fungal
1,0, # male
0 # fungal*male
)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
beta = coef(mod)
diff = c(0, # fungal
1,0, # male
0 # fungal*male
)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
mod = coxph(Surv(Start,Day,Death) ~ Fungal + Male:gt1 + Male:gt2, data = df2)
cox.zph(mod)
cox.zph(mod, transform=log)
mod = coxph(Surv(Start,Day,Death) ~ Fungal + Male:gt1 + Male:gt2 + Fungal:Male, data = df2)
cox.zph(mod)
cox.zph(mod, transform=log)
extractAIC(mod)
mod = coxph(Surv(Start,Day,Death) ~ Fungal + Male:gt1 + Male:gt2, data = df2)
cox.zph(mod)
beta = coef(mod)
diff = c(0, # fungal
1,0 # male
)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
diff = c(0, # fungal
-1,0 # male
)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
diff = c(0, # fungal
0,-1 # male
)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
mod = coxph(Surv(Start,Day,Death) ~ Fungal + Male:gt1 + Male:gt2 + Fungal:Male, data = df2)
cox.zph(mod)
cox.zph(mod, transform=log)
extractAIC(mod)
beta = coef(mod)
diff = c(0, # fungal
-1,0, # male
0) # fungal male
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
diff = c(0, # fungal
0,-1, # male
0) # fungal male
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
diff = c(0, # fungal
-1,0, # male
-1) # fungal male
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
summary(mod)
mod = coxph(Surv(Start,Day,Death) ~ Fungal + Male:gt1 + Male:gt2, data = df2)
cox.zph(mod)
cox.zph(mod, transform=log)
extractAIC(mod)
diff = c(0, # fungal
-1,0) # male
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
beta = coef(mod)
diff = c(0, # fungal
-1,0) # male
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
mod = coxph(Surv(Start,Day,Death) ~ Fungal + Male:gt1 + Male:gt2 + Fungal*Male, data = df2)
cox.zph(mod)
mod = coxph(Surv(Start,Day,Death) ~ Fungal + Male*gt1 + Male*gt2 + Fungal*Male, data = df2)
cox.zph(mod)
mod = coxph(Surv(Start,Day,Death) ~ Fungal + Male:gt1 + Male:gt2 + Fungal:Male, data = df2)
cox.zph(mod)
cox.zph(mod, transform=log)
extractAIC(mod)
beta = coef(mod)
diff = c(0, # fungal
-1,0, 0) # male
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
mod = coxph(Surv(Start,Day,Death) ~ Fungal:gt1 + Fungal:gt2 + Male:gt1 + Male:gt2 + Fungal:Male, data = df2)
cox.zph(mod)
cox.zph(mod, transform=log)
extractAIC(mod)
diff = c(0,0,  # fungal
-1,0, # male
0)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
beta = coef(mod)
diff = c(0,0,  # fungal
-1,0, # male
0)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
diff = c(0,0,  # fungal
0,-1, # male
0)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
diff = c(0,0,  # fungal
0,-1, # male
-1)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
diff = c(0,0,  # fungal
-1,, # male
-1)
diff = c(0,0,  # fungal
-1,0, # male
-1)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
mod = coxph(Surv(Start,Day,Death) ~ Fungal:gt1 + Fungal:gt2 + Male:gt1 + Male:gt2 + Fungal:Male, data = df2)
cox.zph(mod)
cox.zph(mod, transform=log)
a1 = 8; a2 = 12
df2 = survSplit(df, cut=c(a1,a2), end="Day", event="Death", start="Start") %>%
mutate(gt1 = (Start==0)+0, gt2 = (Start==a1)+0, gt3 = (Start==a2)+0)
mod = coxph(Surv(Start,Day,Death) ~ Fungal:gt1 + Fungal:gt2 + Fungal:gt3 +
Male:gt1 + Male:gt2 + Male:gt3 + Fungal:Male, data = df2)
df2$Male = ifelse(df2$Female==1, 0, 1)
mod = coxph(Surv(Start,Day,Death) ~ Fungal:gt1 + Fungal:gt2 + Fungal:gt3 +
Male:gt1 + Male:gt2 + Male:gt3 + Fungal:Male, data = df2)
cox.zph(mod)
cox.zph(mod, transform=log)
extractAIC(mod)
beta = coef(mod)
diff = c(0,0,0  # fungal
-1,0,0 # male
-1)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
mod = coxph(Surv(Start,Day,Death) ~ Fungal:gt1 + Fungal:gt2 + Fungal:gt3 +
Male:gt1 + Male:gt2 + Male:gt3 + Fungal:Male, data = df2)
cox.zph(mod)
cox.zph(mod, transform=log)
extractAIC(mod)
mod = coxph(Surv(Start,Day,Death) ~ Fungal:gt1 + Fungal:gt2 + Fungal:gt3 +
Male:gt1 + Male:gt2 + Male:gt3, data = df2)
cox.zph(mod)
cox.zph(mod, transform=log)
extractAIC(mod)
mod = coxph(Surv(Start,Day,Death) ~ Fungal:gt1 + Fungal:gt2 + Fungal:gt3 +
Male:gt1 + Male:gt2 + Male:gt3 + Fungal:Male, data = df2)
cox.zph(mod)
beta = coef(mod)
diff = c(0,0,0  # fungal
-1,0,0 # male
-1)
diff = c(0,0,0  # fungal
-1,0,0, # male
-1)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
beta = coef(mod)
diff = c(0,0,0  # fungal
-1,0,0, # male
-1)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
diff = c(0,0,0,  # fungal
-1,0,0, # male
-1)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
diff = c(0,0,0,  # fungal
-1,0,0, # male
0)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
diff = c(0,0,0,  # fungal
0,-1,0, # male
0)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
diff = c(0,0,0,  # fungal
-1,0,0, # male
-1)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
mod = coxph(Surv(Start,Day,Death) ~ Fungal:gt1 + Fungal:gt2 + Fungal:gt3 +
Male:gt1 + Male:gt2 + Male:gt3 +
Fungal:Male:gt1 + Fungal:Male:gt2 + Fungal:Male:gt3, data = df2)
cox.zph(mod)
cox.zph(mod, transform=log)
extractAIC(mod)
beta = coef(mod)
diff = c(0,0,0,  # fungal
-1,0,0, # male
0,0,0)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
diff = c(0,0,0,  # fungal
0,-1,0, # male
0,0,0)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
diff = c(0,0,0,  # fungal
0,0,-1, # male
0,0,0)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
diff = c(0,0,0,  # fungal
-1,0,0, # male
-1,0,0)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
mod = coxph(Surv(Start,Day,Death) ~ Fungal +
Male:gt1 + Male:gt2 + Male:gt3 +
Fungal:Male:gt1 + Fungal:Male:gt2 + Fungal:Male:gt3, data = df2)
cox.zph(mod)
cox.zph(mod, transform=log)
extractAIC(mod)
diff = c(0,  # fungal
-1,0,0, # male
-1,0,0)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
beta = coef(mod)
diff = c(0,  # fungal
-1,0,0, # male
-1,0,0)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
diff = c(0,  # fungal
-1,0,0, # male
0,0,0)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
diff = c(0,  # fungal
0,-1,0, # male
0,0,0)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
diff = c(0,  # fungal
0,0,-1, # male
0,0,0)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
diff = c(0,  # fungal
-1,0,0, # male
-1,0,0)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
diff = c(0,  # fungal
0,-1,0, # male
0,-1,0)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
diff = c(0,  # fungal
0,0,-1, # male
0,0,-1)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
df2 = survSplit(df, cut=c(a1), end="Day", event="Death", start="Start") %>%
mutate(gt1 = (Start==0)+0, gt2 = (Start==a1)+0)
df2$Male = ifelse(df2$Female==1, 0, 1)
mod = coxph(Surv(Start,Day,Death) ~ Fungal +
Male:gt1 + Male:gt2 +
Fungal:Male:gt1 + Fungal:Male:gt2, data = df2)
cox.zph(mod)
cox.zph(mod, transform=log)
extractAIC(mod)
a1 = 8; a2 = 12
df2 = survSplit(df, cut=c(a1), end="Day", event="Death", start="Start") %>%
mutate(gt1 = (Start==0)+0, gt2 = (Start==a1)+0, gt3 = (Start==a2)+0)
df2$Male = ifelse(df2$Female==1, 0, 1)
mod = coxph(Surv(Start,Day,Death) ~ Fungal +
Male:gt1 + Male:gt2 + Male:gt3 +
Fungal:Male:gt1 + Fungal:Male:gt2 + Fungal:Male:gt3, data = df2)
cox.zph(mod)
cox.zph(mod, transform=log)
mod = coxph(Surv(Start,Day,Death) ~ Fungal +
Male:gt1 + Male:gt2 + Male:gt3 +
Fungal:Male:gt1 + Fungal:Male:gt2 + Fungal:Male:gt3, data = df2)
cox.zph(mod)
a1 = 8; a2 = 12
df2 = survSplit(df, cut=c(a1,a3), end="Day", event="Death", start="Start") %>%
mutate(gt1 = (Start==0)+0, gt2 = (Start==a1)+0, gt3 = (Start==a2)+0)
a1 = 8; a2 = 12
df2 = survSplit(df, cut=c(a1,a2), end="Day", event="Death", start="Start") %>%
mutate(gt1 = (Start==0)+0, gt2 = (Start==a1)+0, gt3 = (Start==a2)+0)
df2$Male = ifelse(df2$Female==1, 0, 1)
mod = coxph(Surv(Start,Day,Death) ~ Fungal +
Male:gt1 + Male:gt2 + Male:gt3 +
Fungal:Male:gt1 + Fungal:Male:gt2 + Fungal:Male:gt3, data = df2)
cox.zph(mod)
cox.zph(mod, transform=log)
extractAIC(mod)
diff = c(0,  # fungal
0,0,-1, # male
0,0,-1) # fungal*male
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
beta = coef(mod)
diff = c(0,  # fungal
0,0,-1, # male
0,0,-1) # fungal*male
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
diff = c(0,  # fungal
0,0,-1, # male
0,0,0) # fungal*male
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
diff = c(0,  # fungal
0,-1,0, # male
0,0,0) # fungal*male
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
diff = c(0,  # fungal
0,-1,0, # male
0,-1,0) # fungal*male
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
diff = c(0,  # fungal
-1,0,0, # male
0,0,0) # fungal*male
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
diff = c(0,  # fungal
-1,0,0, # male
-1,0,0) # fungal*male
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff), 2*(1-pt(abs(t_obs), length(beta))))
summary(mod)
# convert to dummies
df = df %>% mutate(Fungal=(Treatment=="GHA")+0, Female=(Sex=="M")+0)
# merge dead and alive
df = bind_rows(df_alive, df_dead)
# convert to dummies
df = df %>% mutate(Fungal=(Treatment=="GHA")+0, Male=(Sex=="M")+0)
reps %>%
group_by(Treatment,Sex,Day) %>% summarise(Death=sum(Death), `Initial density`=sum(`Initial density`)) %>%
group_by(Treatment,Sex) %>% mutate(Death=cumsum(Death), `Survival Percent`=1-Death/`Initial density`) %>%
ggplot(aes(x=Day, y=`Survival Percent`*100, color=Sex, linetype=Treatment)) +
geom_line() +
geom_point() +
# scale_color_manual() +
scale_linetype_manual(values = c("Control"="dashed","GHA"="solid")) +
labs(x="Days", y="Survival Percent (%)") +
theme_classic()
mod = coxph(Surv(Day, Death) ~ Fungal + Female + Fungal*Male, data = df)
mod = coxph(Surv(Day, Death) ~ Fungal + Male + Fungal*Male, data = df)
a1 = 8; a2 = 12
df2 = survSplit(df, cut=c(a1,a2), end="Day", event="Death", start="Start") %>%
mutate(gt1 = (Start==0)+0, gt2 = (Start==a1)+0, gt3 = (Start==a2)+0)
df2$Male = ifelse(df2$Female==1, 0, 1)
mod = coxph(Surv(Start,Day,Death) ~ Fungal +
Male:gt1 + Male:gt2 + Male:gt3 +
Fungal:Male:gt1 + Fungal:Male:gt2 + Fungal:Male:gt3, data = df2)
beta = coef(mod)
diff = c(0,  # fungal
-1,0,0, # male
-1,0,0) # fungal*male
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
get_time_data = function(data){
data = survSplit(data, cut=a1, end="Day", event="Death", start="Start") %>%
mutate(gt1 = (Start==0)+0, gt2 = (Start==a1)+0,
t1_fungal = Fungal*gt1, t2_fungal = Fungal*gt2,
t1_male = Male*gt1, t2_male = Male*gt2,
fun_male = Fungal*Male)
return(data)
}
category = ungroup(df) %>% select(Fungal,Male) %>% unique() %>% set_rownames(NULL)
time_intervals = data.frame(Start=c(0,a1), Day=c(a1,19), gt1=c(1,0), gt2=c(0,1), Death=0)
get_time_data = function(data){
data = survSplit(data, cut=a1, end="Day", event="Death", start="Start") %>%
mutate(gt1 = (Start==0)+0, gt2 = (Start==a1)+0, gt2 = (Start==a2)+0,
t1_male = Male*gt1, t2_male = Male*gt2,
fun_male = Fungal*Male, t_int = Fungal*Male*gt1, t_int = Fungal*Male*gt2)
return(data)
}
category = ungroup(df) %>% select(Fungal,Male) %>% unique() %>% set_rownames(NULL)
time_intervals = data.frame(Start=c(0,a1,a2), Day=c(a1,a2,19), gt1=c(1,0,0), gt2=c(0,1,0), Death=0)
category = ungroup(df) %>% select(Fungal,Male) %>% unique() %>% set_rownames(NULL)
time_intervals = data.frame(Start=c(0,a1,a2), Day=c(a1,a2,19), gt1=c(1,0,0), gt2=c(0,1,0), Death=0)
pred_surv = function(data){
mod = coxph(Surv(Start, Day, Death) ~ Fungal + Male + t1_male + t2_male +
fun_male + t1_int + t_int,
data = get_time_data(data))
surv = c()
for (i in 1:nrow(category)){
test = data.frame(category[i,], time_intervals, row.names = NULL) %>%
mutate(t1_male = Male*gt1, t2_male = Male*gt2,
fun_male = Fungal*Male, t_int = Fungal*Male*gt1, t_int = Fungal*Male*gt2)
time = summary(survfit(mod, newdata = test, individual = TRUE))$time
insert = setdiff(2:19, time)
time = c(time, insert)
est = c(1, summary(survfit(mod, newdata = test, individual = TRUE))$surv,
rep(NA, length(insert)))
surv_i = data.frame(category[i,], est, day = c(1,time)) %>% arrange(day)
surv = rbind(surv, surv_i)
}
return(surv)
}
est = pred_surv(df)
get_time_data = function(data){
data = survSplit(data, cut=a1, end="Day", event="Death", start="Start") %>%
mutate(gt1 = (Start==0)+0, gt2 = (Start==a1)+0, gt2 = (Start==a2)+0,
t1_male = Male*gt1, t2_male = Male*gt2,
fun_male = Fungal*Male, t1_int = Fungal*Male*gt1, t2_int = Fungal*Male*gt2)
return(data)
}
category = ungroup(df) %>% select(Fungal,Male) %>% unique() %>% set_rownames(NULL)
time_intervals = data.frame(Start=c(0,a1,a2), Day=c(a1,a2,19), gt1=c(1,0,0), gt2=c(0,1,0), Death=0)
pred_surv = function(data){
mod = coxph(Surv(Start, Day, Death) ~ Fungal + Male + t1_male + t2_male +
fun_male + t1_int + t_int,
data = get_time_data(data))
surv = c()
for (i in 1:nrow(category)){
test = data.frame(category[i,], time_intervals, row.names = NULL) %>%
mutate(t1_male = Male*gt1, t2_male = Male*gt2,
fun_male = Fungal*Male, t1_int = Fungal*Male*gt1, t2_int = Fungal*Male*gt2)
time = summary(survfit(mod, newdata = test, individual = TRUE))$time
insert = setdiff(2:19, time)
time = c(time, insert)
est = c(1, summary(survfit(mod, newdata = test, individual = TRUE))$surv,
rep(NA, length(insert)))
surv_i = data.frame(category[i,], est, day = c(1,time)) %>% arrange(day)
surv = rbind(surv, surv_i)
}
return(surv)
}
est = pred_surv(df)
pred_surv = function(data){
mod = coxph(Surv(Start, Day, Death) ~ Fungal + Male + t1_male + t2_male +
fun_male + t1_int + t2_int,
data = get_time_data(data))
surv = c()
for (i in 1:nrow(category)){
test = data.frame(category[i,], time_intervals, row.names = NULL) %>%
mutate(t1_male = Male*gt1, t2_male = Male*gt2,
fun_male = Fungal*Male, t1_int = Fungal*Male*gt1, t2_int = Fungal*Male*gt2)
time = summary(survfit(mod, newdata = test, individual = TRUE))$time
insert = setdiff(2:19, time)
time = c(time, insert)
est = c(1, summary(survfit(mod, newdata = test, individual = TRUE))$surv,
rep(NA, length(insert)))
surv_i = data.frame(category[i,], est, day = c(1,time)) %>% arrange(day)
surv = rbind(surv, surv_i)
}
return(surv)
}
est = pred_surv(df)
B = 1000
bound = 0.95
# function to extract bounds
ci_calculator = function(data){
ci = data.frame(lower = as.numeric(), upper = as.numeric())
for (i in 1:max(data$Day)) {
ci[i,1] = quantile(data$est[data$Day == i], (1-bound)/2, na.rm = TRUE)
ci[i,2] = quantile(data$est[data$Day == i], (1+bound)/2, na.rm = TRUE)
}
return(ci)
}
# repeat B times
dummy = c()
for (i in 1:B){
dummy_i = c()
for (j in 1:nrow(category)){
dummy_ij = merge(df, category[j,])
a = nrow(dummy_ij)
rows_to_take = sample(a, a, replace = TRUE)
dummy_i = rbind(dummy_i, dummy_ij[rows_to_take,])
}
dummy_i = pred_surv(dummy_i)
dummy = bind_rows(dummy, dummy_i)
}
# get confidence intervals
survs = c()
for (i in 1:nrow(category)){
ci = merge(dummy, category[i,]) %>% mutate(Day=day) %>% ci_calculator()
surv = merge(est, category[i,]) %>% arrange(day)
surv = cbind(surv, ci)
survs = rbind(survs, surv)
}
# recode labels
df_plot = survs %>%
mutate(Treatment = ifelse(Fungal==1, "GHA","Control"), Sex = ifelse(Female==1, "Female","Male"))
# recode labels
df_plot = survs %>%
mutate(Treatment = ifelse(Fungal==1, "GHA","Control"), Sex = ifelse(Male==1, "Male","Female"))
ggplot(df_plot, aes(x=day, y=est, color=Sex, linetype=Treatment, ymin=lower, ymax=upper)) +
geom_line(size = set_line_size) + geom_point(size = set_point_size) +
geom_errorbar(size = set_err_size, width = set_err_width, alpha = set_alpha) +
scale_linetype_manual(values = c("Control"="dotted","GHA"="solid")) +
scale_color_manual(values = c("Female"="#32CD32", "Male"="#FA8072")) +
labs(x="Days", y="Survival Probability") +
thm +
ylim(0,1) +
guides(linetype = guide_legend(order = 1), color = guide_legend(order = 2))
