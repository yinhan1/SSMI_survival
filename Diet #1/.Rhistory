set_line_size = 1
set_point_size = 2.5
set_err_size = 0.7
set_err_width = 0.3
set_alpha = 0.7
# female
df_plot %>%
filter(Sex=="Female") %>%
ggplot(aes(x=day, y=est, linetype=Treatment, color=Diet, ymin=lower, ymax=upper,
group=interaction(Sex,Diet,Treatment))) +
geom_line(size = set_line_size) + geom_point(size = set_point_size, shape=17) +
geom_errorbar(size = set_err_size, width = set_err_width, alpha = set_alpha) +
scale_linetype_manual(values=c("Control"="dotted","Fungal"="solid")) +
labs(x="Day",y="Survival Probability",
linetype="",shape="",color="") +
theme_classic()
# male
df_plot %>%
filter(Sex=="Male") %>%
ggplot(aes(x=day, y=est, linetype=Treatment, color=Diet, ymin=lower, ymax=upper,
group=interaction(Sex,Diet,Treatment))) +
geom_line(size = set_line_size) + geom_point(size = set_point_size, shape=19) +
geom_errorbar(size = set_err_size, width = set_err_width, alpha = set_alpha) +
scale_linetype_manual(values=c("Control"="dotted","Fungal"="solid")) +
labs(x="Day",y="Survival Probability",
linetype="",shape="",color="") +
theme_classic()
View(df_plot)
write.csv(df_plot, "DIET 1 bootstrap.csv")
# recode labels
df_plot = survs %>%
select(Fungal,Male,Diet,day,est,lower,upper) %>%
mutate(Treatment = ifelse(Fungal==1,"Fungal","Control"),
Sex = ifelse(Male==1,"Male","Female"),
Diet = gsub("_","/",Diet))
View(df_plot)
write.csv(df_plot, "DIET 1 bootstrap.csv")
# set global chunk options
knitr::opts_chunk$set(
fig.align = "center",
fig.pos = "H",
message = FALSE,
warning = FALSE,
external = TRUE
)
mod = coxph(Surv(Start, Day, Death) ~
Fungal:gt1 + Fungal:gt2 + Fungal:gt3 +
Male:gt1 + Male:gt2 + Male:gt3 +
Fungal:Male:gt1 + Fungal:Male:gt2 + Fungal:Male:gt3 +
Male:Diet_C_C:gt1 + Male:Diet_C_C:gt2 + Male:Diet_C_C:gt3 +
Male:Diet_CY_CY:gt1 + Male:Diet_CY_CY:gt2 + Male:Diet_CY_CY:gt3 +
Male:Diet_CY_C:gt1 + Male:Diet_CY_C:gt2 + Male:Diet_CY_C:gt3 +
Male:Diet_G_G:gt1 + Male:Diet_G_G:gt2 + Male:Diet_G_G:gt3 +
Fungal:Diet_C_C:gt1 + Fungal:Diet_C_C:gt2 + Fungal:Diet_C_C:gt3 +
Fungal:Diet_CY_CY:gt1 + Fungal:Diet_CY_CY:gt2 + Fungal:Diet_CY_CY:gt3 +
Fungal:Diet_CY_C:gt1 + Fungal:Diet_CY_C:gt2 + Fungal:Diet_CY_C:gt3 +
Fungal:Diet_G_G:gt1 + Fungal:Diet_G_G:gt2 + Fungal:Diet_G_G:gt3 +
Fungal:Male:Diet_C_C:gt1 + Fungal:Male:Diet_C_C:gt2 + Fungal:Male:Diet_C_C:gt3 +
Fungal:Male:Diet_CY_CY:gt1 + Fungal:Male:Diet_CY_CY:gt2 + Fungal:Male:Diet_CY_CY:gt3 +
Fungal:Male:Diet_CY_C:gt1 + Fungal:Male:Diet_CY_C:gt2 + Fungal:Male:Diet_CY_C:gt3 +
Fungal:Male:Diet_G_G:gt1 + Fungal:Male:Diet_G_G:gt2 + Fungal:Male:Diet_G_G:gt3,
data = df2)
# set global chunk options
knitr::opts_chunk$set(
fig.align = "center",
fig.pos = "H",
message = FALSE,
warning = FALSE,
external = TRUE
)
library(tidyverse)
library(fastDummies)
library(survival)
library(survminer)
setwd("/Users/hanyin/Dropbox (CSU Fullerton)/Research Project/Flies/Kshama -- statistical analysis/Diet #1")
rep_1 = readxl::read_excel("data/SSMI_Diet_Rep1_for R.xlsx")
rep_2 = readxl::read_excel("data/SSMI_Diet_Rep2_for R.xlsx")
rep_3 = readxl::read_excel("data/SSMI_Diet_Rep3_for R.xlsx")
reps = rbind(rep_1, rep_2, rep_3)
cols_to_factor = c("Replicate","Population","Cage_Number","Diet","Treatment","Sex")
reps = reps %>% mutate_at(cols_to_factor, factor) %>% filter(Day<=12)
# combine replicate
df0 = reps %>%
group_by(Treatment,Diet,Sex,Day) %>%
summarise(Death = sum(Death),
Initial = sum(`Initial density`)) %>%
group_by(Treatment,Diet,Sex) %>%
mutate(Death = cumsum(Death)) %>%
ungroup() %>%
mutate(survPer = 1 - Death/Initial) %>%
select(-c(Initial,Death))
df_raw = df0 %>% select(Treatment,Diet,Sex) %>% unique() %>%
mutate(Day = 0, survPer = 1) %>%
bind_rows(df0)
ggplot(df_raw, aes(x=Day, y=survPer, linetype=Treatment, color=Diet,
group=interaction(Treatment,Diet,Sex))) +
geom_line() +
facet_grid(~Diet)
n = nrow(reps)
dead = reps[rep(1:n, reps$Death),] %>%
mutate(Death = 1) %>%
select(-`Initial density`)
alive = reps %>%
group_by(Replicate,Population,Cage_Number,Diet,Treatment,Sex) %>%
summarise(Alive = max(`Initial density`) - sum(Death)) %>%
mutate(Day = max(reps$Day), Death = 0)
n = nrow(alive)
alive = alive[rep(1:n, alive$Alive),] %>%
select(Replicate,Population,Cage_Number,Diet,Treatment,Day,Sex,Death)
df = bind_rows(dead, alive) %>%
mutate(Diet = recode(Diet,
"C, Cornmeal"="C_C", "C, Cornmeal + Yeast"="C_CY",
"C+Y, Cornmeal"="CY_C","C+Y, Cornmeal + Yeast"="CY_CY",
"G, Glucose"="G_G")) %>%
dummy_cols("Diet") %>%
mutate(Fungal = (Treatment=="Fungal")+0,
Male = (Sex=="M")+0)
# split now
a1 = 4; a2 = 9
split_time = c(a1,a2)
df2 = survSplit(df, cut=split_time, end="Day", event="Death", start="Start") %>%
mutate(gt1 = (Start==0)+0, gt2 = (Start==a1)+0, gt3 = (Start==a2)+0)
mod = coxph(Surv(Start, Day, Death) ~
Fungal:gt1 + Fungal:gt2 + Fungal:gt3 +
Male:gt1 + Male:gt2 + Male:gt3 +
Fungal:Male:gt1 + Fungal:Male:gt2 + Fungal:Male:gt3 +
Male:Diet_C_C:gt1 + Male:Diet_C_C:gt2 + Male:Diet_C_C:gt3 +
Male:Diet_CY_CY:gt1 + Male:Diet_CY_CY:gt2 + Male:Diet_CY_CY:gt3 +
Male:Diet_CY_C:gt1 + Male:Diet_CY_C:gt2 + Male:Diet_CY_C:gt3 +
Male:Diet_G_G:gt1 + Male:Diet_G_G:gt2 + Male:Diet_G_G:gt3 +
Fungal:Diet_C_C:gt1 + Fungal:Diet_C_C:gt2 + Fungal:Diet_C_C:gt3 +
Fungal:Diet_CY_CY:gt1 + Fungal:Diet_CY_CY:gt2 + Fungal:Diet_CY_CY:gt3 +
Fungal:Diet_CY_C:gt1 + Fungal:Diet_CY_C:gt2 + Fungal:Diet_CY_C:gt3 +
Fungal:Diet_G_G:gt1 + Fungal:Diet_G_G:gt2 + Fungal:Diet_G_G:gt3 +
Fungal:Male:Diet_C_C:gt1 + Fungal:Male:Diet_C_C:gt2 + Fungal:Male:Diet_C_C:gt3 +
Fungal:Male:Diet_CY_CY:gt1 + Fungal:Male:Diet_CY_CY:gt2 + Fungal:Male:Diet_CY_CY:gt3 +
Fungal:Male:Diet_CY_C:gt1 + Fungal:Male:Diet_CY_C:gt2 + Fungal:Male:Diet_CY_C:gt3 +
Fungal:Male:Diet_G_G:gt1 + Fungal:Male:Diet_G_G:gt2 + Fungal:Male:Diet_G_G:gt3,
data = df2)
# cox.zph(mod)
# summary(mod)
# extractAIC(mod)
# cox.zph(mod)
summary(mod)
library(magrittr)
library(tidyverse)
library(reshape2)
library(fastDummies)
library(ggsci)
library(survival)
library(survminer)
setwd("/Users/hanyin/Dropbox (CSU Fullerton)/Research Project/Flies/Kshama -- statistical analysis")
rep1 = readxl::read_excel("data/SSMI_DietSwitch.xlsx", sheet = 1) %>% na.omit()
rep1 = readxl::read_excel("data/SSMI_DietSwitch.xlsx", sheet = 1) %>% na.omit()
rep2 = readxl::read_excel("data/SSMI_DietSwitch.xlsx", sheet = 2) %>% na.omit()
rep3 = readxl::read_excel("data/SSMI_DietSwitch.xlsx", sheet = 3) %>% na.omit()
df = bind_rows(rep1, rep2, rep3) %>%
mutate(Diet = gsub(" ", "", Diet, fixed = TRUE),
Diet = recode(Diet,
"Cornmeal,C,C" = "C/C",
"Glucose,G,G" = "G/G",
"Cornmeal,G,G" = "C/G",
"Glucose,C,C" = "G/C")) %>%
filter(Diet %in% c("C/C","G/G","C/G","G/C"),
Day<=12)
day_end = df %>%
group_by(Population,Diet,Treatment,Sex,Day) %>%
summarize(Death = sum(Death), Initial = sum(`Initial density`)) %>%
group_by(Population,Diet,Treatment,Sex) %>%
mutate(Deaths = cumsum(Death)) %>%
ungroup() %>%
mutate(surv_per = 1-Deaths/Initial) %>%
select(-c(Death,Initial,Deaths))
day_initial = day_end %>% select(-c(Day,surv_per)) %>%
unique() %>%
mutate(Day=0, surv_per = 1)
goal = bind_rows(day_initial,day_end) %>%
ggplot(aes(x=Day, y=surv_per, linetype=Treatment, color=Diet, shape=Sex)) +
geom_line() +
geom_point() +
ylim(0.35,1) +
labs(linetype="", color="", shape="") +
theme_minimal()
goal + facet_wrap(~Diet, ncol=4)
n = nrow(df)
# duplicate dead
dead = df[ rep(c(1:n), df$Death), ] %>% mutate(Death = 1) %>% select(-c(`Initial density`))
# count alive
alive = df %>%
group_by(Replicate,Population,Cage_Number,Diet,Treatment,Sex) %>%
summarise(Deaths = sum(Death), Initial = max(`Initial density`)) %>%
ungroup() %>%
mutate(Alive = Initial - Deaths)
# duplicate alive
n = nrow(alive)
alive = alive[ rep(c(1:n), alive$Alive), ] %>% mutate(Day = 12, Death = 0)
alive = alive[c(names(dead))]
# concatenate dead and alive
df = rbind(alive, dead) %>%
mutate_at(c("Replicate","Population","Cage_Number","Diet","Treatment","Sex"), function(x) as.factor(x))
# split the data into intervals
a1 = 3; a2 = 9;
split_time = c(a1,a2)
df2 = survSplit(df, cut=split_time, end="Day", event="Death", start="Start") %>%
mutate(Diet = gsub(",", "_", Diet)) %>%
mutate(gt1 = (Start==0)+0, gt2 = (Start==a1)+0, gt3 = (Start==a2)+0,
Fungal = (Treatment=="Fungal")+0, Female = (Sex=="F")+0) %>%
dummy_cols("Diet")
# build time-dependent model
mod = coxph(Surv(Start, Day, Death) ~
Fungal:gt1 + Fungal:gt2 + Fungal:gt3 +
Female:gt1 + Female:gt2 + Female:gt3 +
`Diet_G/G`:gt1 + `Diet_G/G`:gt2 + `Diet_G/G`:gt3 +
`Diet_G/C`:gt1 + `Diet_G/C`:gt2 + `Diet_G/C`:gt3 +
`Diet_C/G`:gt1 + `Diet_C/G`:gt2 + `Diet_C/G`:gt3 +
Fungal:Female:gt1 + Fungal:Female:gt2 + Fungal:Female:gt3 +
`Diet_G/G`:Fungal:gt1 + `Diet_G/G`:Fungal:gt2 + `Diet_G/G`:Fungal:gt3 +
`Diet_G/C`:Fungal:gt1 + `Diet_G/C`:Fungal:gt2 + `Diet_G/C`:Fungal:gt3 +
`Diet_C/G`:Fungal:gt1 + `Diet_C/G`:Fungal:gt2 + `Diet_C/G`:Fungal:gt3 +
`Diet_G/G`:Female:Fungal:gt1 + `Diet_G/G`:Female:Fungal:gt2 + `Diet_G/G`:Female:Fungal:gt3 +
`Diet_C/G`:Female:Fungal:gt1 + `Diet_C/G`:Female:Fungal:gt2 + `Diet_C/G`:Female:Fungal:gt3,
df2)
# test assumptions again
# cox.zph(mod)
# cox.zph(mod, transform = log)
# summary(mod)
# extractAIC(mod)
summary(mod)
# set global chunk options
knitr::opts_chunk$set(
fig.align = "center",
fig.pos = "H",
message = FALSE,
warning = FALSE,
external = TRUE
)
library(tidyverse)
library(fastDummies)
library(survival)
library(survminer)
setwd("/Users/hanyin/Dropbox (CSU Fullerton)/Research Project/Flies/Kshama -- statistical analysis/Diet #1")
rep_1 = readxl::read_excel("data/SSMI_Diet_Rep1_for R.xlsx")
rep_2 = readxl::read_excel("data/SSMI_Diet_Rep2_for R.xlsx")
rep_3 = readxl::read_excel("data/SSMI_Diet_Rep3_for R.xlsx")
reps = rbind(rep_1, rep_2, rep_3)
cols_to_factor = c("Replicate","Population","Cage_Number","Diet","Treatment","Sex")
reps = reps %>% mutate_at(cols_to_factor, factor) %>% filter(Day<=12)
# combine replicate
df0 = reps %>%
group_by(Treatment,Diet,Sex,Day) %>%
summarise(Death = sum(Death),
Initial = sum(`Initial density`)) %>%
group_by(Treatment,Diet,Sex) %>%
mutate(Death = cumsum(Death)) %>%
ungroup() %>%
mutate(survPer = 1 - Death/Initial) %>%
select(-c(Initial,Death))
df_raw = df0 %>% select(Treatment,Diet,Sex) %>% unique() %>%
mutate(Day = 0, survPer = 1) %>%
bind_rows(df0)
ggplot(df_raw, aes(x=Day, y=survPer, linetype=Treatment, color=Diet,
group=interaction(Treatment,Diet,Sex))) +
geom_line() +
facet_grid(~Diet)
n = nrow(reps)
dead = reps[rep(1:n, reps$Death),] %>%
mutate(Death = 1) %>%
select(-`Initial density`)
alive = reps %>%
group_by(Replicate,Population,Cage_Number,Diet,Treatment,Sex) %>%
summarise(Alive = max(`Initial density`) - sum(Death)) %>%
mutate(Day = max(reps$Day), Death = 0)
n = nrow(alive)
alive = alive[rep(1:n, alive$Alive),] %>%
select(Replicate,Population,Cage_Number,Diet,Treatment,Day,Sex,Death)
df = bind_rows(dead, alive) %>%
mutate(Diet = recode(Diet,
"C, Cornmeal"="C_C", "C, Cornmeal + Yeast"="C_CY",
"C+Y, Cornmeal"="CY_C","C+Y, Cornmeal + Yeast"="CY_CY",
"G, Glucose"="G_G")) %>%
dummy_cols("Diet") %>%
mutate(Fungal = (Treatment=="Fungal")+0,
Male = (Sex=="M")+0)
# split now
a1 = 4; a2 = 9
split_time = c(a1,a2)
df2 = survSplit(df, cut=split_time, end="Day", event="Death", start="Start") %>%
mutate(gt1 = (Start==0)+0, gt2 = (Start==a1)+0, gt3 = (Start==a2)+0)
mod = coxph(Surv(Start, Day, Death) ~
Fungal:gt1 + Fungal:gt2 + Fungal:gt3 +
Male:gt1 + Male:gt2 + Male:gt3 +
Fungal:Male:gt1 + Fungal:Male:gt2 + Fungal:Male:gt3 +
Male:Diet_C_C:gt1 + Male:Diet_C_C:gt2 + Male:Diet_C_C:gt3 +
Male:Diet_CY_CY:gt1 + Male:Diet_CY_CY:gt2 + Male:Diet_CY_CY:gt3 +
Male:Diet_CY_C:gt1 + Male:Diet_CY_C:gt2 + Male:Diet_CY_C:gt3 +
Male:Diet_G_G:gt1 + Male:Diet_G_G:gt2 + Male:Diet_G_G:gt3 +
Fungal:Diet_C_C:gt1 + Fungal:Diet_C_C:gt2 + Fungal:Diet_C_C:gt3 +
Fungal:Diet_CY_CY:gt1 + Fungal:Diet_CY_CY:gt2 + Fungal:Diet_CY_CY:gt3 +
Fungal:Diet_CY_C:gt1 + Fungal:Diet_CY_C:gt2 + Fungal:Diet_CY_C:gt3 +
Fungal:Diet_G_G:gt1 + Fungal:Diet_G_G:gt2 + Fungal:Diet_G_G:gt3 +
Fungal:Male:Diet_C_C:gt1 + Fungal:Male:Diet_C_C:gt2 + Fungal:Male:Diet_C_C:gt3 +
Fungal:Male:Diet_CY_CY:gt1 + Fungal:Male:Diet_CY_CY:gt2 + Fungal:Male:Diet_CY_CY:gt3 +
Fungal:Male:Diet_CY_C:gt1 + Fungal:Male:Diet_CY_C:gt2 + Fungal:Male:Diet_CY_C:gt3 +
Fungal:Male:Diet_G_G:gt1 + Fungal:Male:Diet_G_G:gt2 + Fungal:Male:Diet_G_G:gt3,
data = df2)
# cox.zph(mod)
summary(mod)
# extractAIC(mod)
knitr::opts_chunk$set(
fig.align = "center",
fig.pos = "H",
message = FALSE,
warning = FALSE,
external = TRUE,
echo = TRUE
)
library(magrittr)
library(tidyverse)
library(reshape2)
library(fastDummies)
library(ggsci)
library(survival)
library(survminer)
setwd("/Users/hanyin/Dropbox (CSU Fullerton)/Research Project/Flies/Kshama -- statistical analysis")
rep1 = readxl::read_excel("data/SSMI_DietSwitch.xlsx", sheet = 1) %>% na.omit()
rep1 = readxl::read_excel("data/SSMI_DietSwitch.xlsx", sheet = 1) %>% na.omit()
rep2 = readxl::read_excel("data/SSMI_DietSwitch.xlsx", sheet = 2) %>% na.omit()
rep3 = readxl::read_excel("data/SSMI_DietSwitch.xlsx", sheet = 3) %>% na.omit()
df = bind_rows(rep1, rep2, rep3) %>%
mutate(Diet = gsub(" ", "", Diet, fixed = TRUE),
Diet = recode(Diet,
"Cornmeal,C,C" = "C/C",
"Glucose,G,G" = "G/G",
"Cornmeal,G,G" = "C/G",
"Glucose,C,C" = "G/C")) %>%
filter(Diet %in% c("C/C","G/G","C/G","G/C"),
Day<=12)
# write.csv(df,"DIET 2 raw.csv")
day_end = df %>%
group_by(Population,Diet,Treatment,Sex,Day) %>%
summarize(Death = sum(Death), Initial = sum(`Initial density`)) %>%
group_by(Population,Diet,Treatment,Sex) %>%
mutate(Deaths = cumsum(Death)) %>%
ungroup() %>%
mutate(surv_per = 1-Deaths/Initial) %>%
select(-c(Death,Initial,Deaths))
day_initial = day_end %>% select(-c(Day,surv_per)) %>%
unique() %>%
mutate(Day=0, surv_per = 1)
goal = bind_rows(day_initial,day_end) %>%
ggplot(aes(x=Day, y=surv_per, linetype=Treatment, color=Diet, shape=Sex)) +
geom_line() +
geom_point() +
ylim(0.35,1) +
labs(linetype="", color="", shape="") +
theme_minimal()
goal + facet_wrap(~Diet, ncol=4)
n = nrow(df)
# duplicate dead
dead = df[ rep(c(1:n), df$Death), ] %>% mutate(Death = 1) %>% select(-c(`Initial density`))
# count alive
alive = df %>%
group_by(Replicate,Population,Cage_Number,Diet,Treatment,Sex) %>%
summarise(Deaths = sum(Death), Initial = max(`Initial density`)) %>%
ungroup() %>%
mutate(Alive = Initial - Deaths)
# duplicate alive
n = nrow(alive)
alive = alive[ rep(c(1:n), alive$Alive), ] %>% mutate(Day = 12, Death = 0)
alive = alive[c(names(dead))]
# concatenate dead and alive
df = rbind(alive, dead) %>%
mutate_at(c("Replicate","Population","Cage_Number","Diet","Treatment","Sex"), function(x) as.factor(x))
# split the data into intervals
a1 = 3; a2 = 9;
split_time = c(a1,a2)
df2 = survSplit(df, cut=split_time, end="Day", event="Death", start="Start") %>%
mutate(Diet = gsub(",", "_", Diet)) %>%
mutate(gt1 = (Start==0)+0, gt2 = (Start==a1)+0, gt3 = (Start==a2)+0,
Fungal = (Treatment=="Fungal")+0, Female = (Sex=="F")+0) %>%
dummy_cols("Diet")
# build time-dependent model
mod = coxph(Surv(Start, Day, Death) ~
Fungal:gt1 + Fungal:gt2 + Fungal:gt3 +
Female:gt1 + Female:gt2 + Female:gt3 +
`Diet_G/G`:gt1 + `Diet_G/G`:gt2 + `Diet_G/G`:gt3 +
`Diet_G/C`:gt1 + `Diet_G/C`:gt2 + `Diet_G/C`:gt3 +
`Diet_C/G`:gt1 + `Diet_C/G`:gt2 + `Diet_C/G`:gt3 +
Fungal:Female:gt1 + Fungal:Female:gt2 + Fungal:Female:gt3 +
`Diet_G/G`:Fungal:gt1 + `Diet_G/G`:Fungal:gt2 + `Diet_G/G`:Fungal:gt3 +
`Diet_G/C`:Fungal:gt1 + `Diet_G/C`:Fungal:gt2 + `Diet_G/C`:Fungal:gt3 +
`Diet_C/G`:Fungal:gt1 + `Diet_C/G`:Fungal:gt2 + `Diet_C/G`:Fungal:gt3 +
`Diet_G/G`:Female:Fungal:gt1 + `Diet_G/G`:Female:Fungal:gt2 + `Diet_G/G`:Female:Fungal:gt3 +
`Diet_C/G`:Female:Fungal:gt1 + `Diet_C/G`:Female:Fungal:gt2 + `Diet_C/G`:Female:Fungal:gt3,
df2)
# test assumptions again
# cox.zph(mod)
# cox.zph(mod, transform = log)
# summary(mod)
# extractAIC(mod)
beta = coef(mod)
diff = c(1,0,0, # fungal
0,0,0, # female
0,0,0, # g_g
0,0,0, # g_c
1,0,0, # c_g
1,0,0, # female fungal
0,0,0, # g_g fungal
0,0,0, # g_c fungal
1,0,0, # c_g fungal
0,0,0, # female g_g fungal
1,0,0  # female c_g fungal
)
t_obs = (beta%*%diff) / sqrt(t(diff) %*% vcov(mod) %*% diff)
c(exp(beta%*%diff),
2*(1-pt(abs(t_obs), length(beta))))
summary(mod)
knitr::opts_chunk$set(
fig.align = "center",
fig.pos = "H",
fig.height = 3,
fig.width = 5,
message = FALSE,
warning = FALSE,
external = TRUE,
echo = TRUE
)
library(magrittr)
library(tidyverse)
library(fastDummies)
library(ggsci)
library(survival)
library(survminer)
setwd("/Users/hanyin/Dropbox (CSU Fullerton)/Research Project/Flies/Arnie -- statistical analysis/DIET 3 - Yeast Variation")
rep1 = readxl::read_excel("data/SSMI_YeastVariation.xlsx", sheet = 1) %>% na.omit()
rep2 = readxl::read_excel("data/SSMI_YeastVariation.xlsx", sheet = 2) %>% na.omit()
df = bind_rows(rep1,rep2) %>%
mutate(Diet = gsub(" ", "", Diet, fixed = TRUE)) %>%
filter(Day<=12)
# write.csv(df,"DIET 3 raw.csv")
day_end = df %>%
group_by(Population,Diet,Treatment,Sex,Day) %>%
summarize(Death = sum(Death), Initial = sum(`Initial Density`)) %>%
group_by(Population,Diet,Treatment,Sex) %>%
mutate(Deaths = cumsum(Death)) %>%
ungroup() %>%
mutate(surv_per = 1-Deaths/Initial) %>%
select(-c(Death,Initial,Deaths))
day_initial = day_end %>% select(-c(Day,surv_per)) %>%
unique() %>%
mutate(Day=0, surv_per = 1)
neworder = c("Cornmeal", "C+0.5Y","C+1.0Y","C+1.5Y")
dummy = bind_rows(day_initial,day_end) %>%
mutate(Diet = factor(Diet, levels=neworder),
Sex = recode(Sex, "M"="Male", "F"="Female"),
Sex = factor(Sex, levels=c("Male","Female")))
# write.csv(dummy,"DIET 3 raw.csv")
dummy %>%
ggplot(aes(x=Day, y=surv_per*100, linetype=Treatment, color=Diet, shape=Sex)) +
geom_point() +
geom_line() +
scale_color_jco() +
scale_linetype_manual(values = c("Control"="dotted","Fungal"="solid")) +
scale_shape_manual(values = c("Male"=19, "Female"=2), guide = guide_legend(reverse = TRUE)) +
labs(y="Survival Percent (%)",  shape="", color="", linetype="") +
ylim(50, 100) +
theme_minimal() +
guides(linetype = guide_legend(order=1),
color = guide_legend(order=2),
shape = guide_legend(order=3))
n = nrow(df)
# duplicate dead
dead = df[ rep(c(1:n), df$Death), ] %>% mutate(Death = 1) %>% select(-c(`Initial Density`))
# count alive
alive = df %>%
group_by(Replicate,Population,Cage_Number,Diet,Treatment,Sex) %>%
summarise(Deaths = sum(Death), Initial = max(`Initial Density`)) %>%
ungroup() %>%
mutate(Alive = Initial - Deaths)
# duplicate alive
n = nrow(alive)
alive = alive[ rep(c(1:n), alive$Alive), ] %>% mutate(Day = 12, Death = 0)
alive = alive[c(names(dead))]
# concatenate dead and alive
df = rbind(alive, dead) %>%
mutate_at(c("Replicate","Population","Cage_Number","Diet","Treatment","Sex"), function(x) as.factor(x))
# split the data into intervals
a1 = 5; a2 = 8;
split_time = c(a1,a2)
df2 = survSplit(df, cut=split_time, end="Day", event="Death", start="Start") %>%
mutate(Diet = gsub(",", "_", Diet)) %>%
mutate(gt1 = (Start==0)+0, gt2 = (Start==a1)+0, gt3 = (Start==a2)+0,
Fungal = (Treatment=="Fungal")+0, Female = (Sex=="F")+0,
Diet = recode(Diet, Cornmeal = "0", `C+0.5Y` = "1", `C+1.0Y` = "2", `C+1.5Y` = "3")) %>%
dummy_cols("Diet")
# build time-dependent model
mod = coxph(Surv(Start, Day, Death) ~
Fungal:gt1 + Fungal:gt2 + Fungal:gt3 +
Female:gt1 + Female:gt2 + Female:gt3 +
Diet_0:gt1 + Diet_0:gt2 + Diet_0:gt3 +
Diet_1:gt1 + Diet_1:gt2 + Diet_1:gt3 +
Diet_2:gt1 + Diet_2:gt2 + Diet_2:gt3 +
Female:Fungal:gt1 + Female:Fungal:gt2 + Female:Fungal:gt3 +
Fungal:Diet_0:gt1 + Fungal:Diet_0:gt2 + Fungal:Diet_0:gt3 +
Female:Diet_0:Fungal:gt1 + Female:Diet_0:Fungal:gt2 + Female:Diet_0:Fungal:gt3 +
Female:Diet_1:Fungal:gt1 + Female:Diet_1:Fungal:gt2 + Female:Diet_1:Fungal:gt3,
df2)
# test assumptions again
# cox.zph(mod)
# summary(mod)
extractAIC(mod) # 43012.71
summary(mod)
